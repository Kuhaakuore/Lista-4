/*
Autor: Wesley da Silva Ribeiro  Data:07/04/2020

O programa abaixo utiliza o método de BubleSort para ordenar os valores em um vetor 
de tamanho n */

#include<stdio.h>
#include<locale.h>
#include<stdlib.h>

int* AlocaVetor(int n)
{
    int *V;
    V = malloc(n * sizeof(int));
    if(V != NULL)
    {
        printf("\n Memória alocada com sucesso!\n");
    }
    else
    {
      printf("\n Erro ao alocar memória!\n");
    }
    return V;
}

void PreencheVetor(int n, int* V)
{
    int i = 0;
    while(i != n)
    {
        printf("\n Digite um valor inteiro
        : ");
        scanf("%d", &V[i]);
        i++;
    }
    printf("\n Vetor preenchido com sucesso!\n");
}

void BubleSort(int* V, int tam)
{
    int i, j, aux;
    printf("\n Vetor original = ");
    for(i=0; i<tam; i++)
    {
      printf(" %d,", V[i]);
    }
    for(i=0; i<tam; i++)
    {
      for(j=0; j<tam-1; j++)
      {
        if(V[j] < V[j+1])
        {
          aux = V[j];
          V[j] = V[j+1];
          V[j+1] = aux;
        }
      }
    }
    printf("\n Valores ordenados de forma decrescente = ");
    for(i=0; i<tam; i++)
    {
      printf(" %d,", V[i]);
    }
    printf("\n");
}

int main()
{
    setlocale(LC_ALL,"Portuguese_Brazil");
    int n = 0, *Vetor, v = 0;
    printf(" Digite o tamanho do vetor à ser criado: ");
    scanf("%d", &n);
        while(n <= 0)
        {
            printf("\n Valor inválido \n");
            printf("\n Digite um valor válido: ");
            scanf("%d", &n);
        }
    if(n >= 1)
    {
       Vetor = AlocaVetor(n);
       PreencheVetor(n, Vetor);
       BubleSort(Vetor, n);
    }
    free(Vetor);
    return 0;
}
